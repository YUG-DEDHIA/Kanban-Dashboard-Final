{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport useStore from '../store/useStore';\nconst useFakeTicketTransition = () => {\n  _s();\n  const liveMode = useStore(state => state.liveMode);\n  const updateTicketStatus = useStore(state => state.updateTicketStatus);\n  useEffect(() => {\n    if (!liveMode) return;\n    const interval = setInterval(() => {\n      const randomTicket = tickets[Math.floor(Math.random() * tickets.length)];\n      if (randomTicket) {\n        const nextStatus = {\n          'To Do': 'In Progress',\n          'In Progress': Math.random() > 0.5 ? 'Blocked' : 'Done',\n          'Blocked': 'In Progress'\n        }[randomTicket.status];\n        if (nextStatus) {\n          updateTicketStatus(randomTicket.id, nextStatus);\n        }\n      }\n    }, 2000);\n    return () => clearInterval(interval);\n  }, [liveMode, updateTicketStatus]);\n};\n_s(useFakeTicketTransition, \"4Kzo2/qdxWKO+nANHQQ1K0HL0ho=\", false, function () {\n  return [useStore, useStore];\n});\nexport default useFakeTicketTransition;","map":{"version":3,"names":["useEffect","useStore","useFakeTicketTransition","_s","liveMode","state","updateTicketStatus","interval","setInterval","randomTicket","tickets","Math","floor","random","length","nextStatus","status","id","clearInterval"],"sources":["/home/yugdedhia/Coral/parshva/kanban-dashboard/src/hooks/useFakeTicketTransition.js"],"sourcesContent":["import { useEffect } from 'react';\nimport useStore from '../store/useStore';\n\nconst useFakeTicketTransition = () => {\n  const liveMode = useStore((state) => state.liveMode);\n  const updateTicketStatus = useStore((state) => state.updateTicketStatus);\n\n  useEffect(() => {\n    if (!liveMode) return;\n\n    const interval = setInterval(() => {\n      const randomTicket = tickets[Math.floor(Math.random() * tickets.length)];\n      if (randomTicket) {\n        const nextStatus = {\n          'To Do': 'In Progress',\n          'In Progress': Math.random() > 0.5 ? 'Blocked' : 'Done',\n          'Blocked': 'In Progress',\n        }[randomTicket.status];\n        if (nextStatus) {\n          updateTicketStatus(randomTicket.id, nextStatus);\n        }\n      }\n    }, 2000);\n    \n\n    return () => clearInterval(interval);\n  }, [liveMode, updateTicketStatus]);\n};\n\nexport default useFakeTicketTransition;"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,QAAQ,MAAM,mBAAmB;AAExC,MAAMC,uBAAuB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,MAAMC,QAAQ,GAAGH,QAAQ,CAAEI,KAAK,IAAKA,KAAK,CAACD,QAAQ,CAAC;EACpD,MAAME,kBAAkB,GAAGL,QAAQ,CAAEI,KAAK,IAAKA,KAAK,CAACC,kBAAkB,CAAC;EAExEN,SAAS,CAAC,MAAM;IACd,IAAI,CAACI,QAAQ,EAAE;IAEf,MAAMG,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC,MAAMC,YAAY,GAAGC,OAAO,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGH,OAAO,CAACI,MAAM,CAAC,CAAC;MACxE,IAAIL,YAAY,EAAE;QAChB,MAAMM,UAAU,GAAG;UACjB,OAAO,EAAE,aAAa;UACtB,aAAa,EAAEJ,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,SAAS,GAAG,MAAM;UACvD,SAAS,EAAE;QACb,CAAC,CAACJ,YAAY,CAACO,MAAM,CAAC;QACtB,IAAID,UAAU,EAAE;UACdT,kBAAkB,CAACG,YAAY,CAACQ,EAAE,EAAEF,UAAU,CAAC;QACjD;MACF;IACF,CAAC,EAAE,IAAI,CAAC;IAGR,OAAO,MAAMG,aAAa,CAACX,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACH,QAAQ,EAAEE,kBAAkB,CAAC,CAAC;AACpC,CAAC;AAACH,EAAA,CAxBID,uBAAuB;EAAA,QACVD,QAAQ,EACEA,QAAQ;AAAA;AAwBrC,eAAeC,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}