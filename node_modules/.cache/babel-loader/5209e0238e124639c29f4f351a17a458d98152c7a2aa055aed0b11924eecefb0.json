{"ast":null,"code":"var _jsxFileName = \"/home/yugdedhia/Coral-Finak/Kanban-Dashboard/src/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Header from './components/Header';\nimport SwimLane from './components/SwimLane';\nimport useStore from './store/useStore';\nimport useFakeTicketTransition from './hooks/useFakeTicketTransition';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const tickets = useStore(state => state.tickets);\n  const toggleLiveMode = useStore(state => state.toggleLiveMode);\n  const liveMode = useStore(state => state.liveMode);\n  const updateTicketStatus = useStore(state => state.updateTicketStatus);\n  useFakeTicketTransition();\n  const ticketsByStatus = tickets.reduce((acc, ticket) => {\n    acc[ticket.status] = acc[ticket.status] || [];\n    acc[ticket.status].push(ticket);\n    return acc;\n  }, {});\n  const onDragEnd = result => {\n    const {\n      source,\n      destination,\n      draggableId\n    } = result;\n    if (!destination) return;\n\n    // Check if the user dropped the ticket in a different swimlane\n    if (source.droppableId !== destination.droppableId) {\n      updateTicketStatus(draggableId, destination.droppableId);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      ticketCounts: Object.fromEntries(Object.entries(ticketsByStatus).map(([status, tickets]) => [status, tickets.length])),\n      liveMode: liveMode,\n      toggleLiveMode: toggleLiveMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"kanban-board flex flex-row space-x-4 p-4 overflow-x-auto\",\n        children: ['To Do', 'In Progress', 'Blocked', 'Done'].map(status => /*#__PURE__*/_jsxDEV(SwimLane, {\n          title: status,\n          tickets: ticketsByStatus[status] || []\n        }, status, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0rSTgYJtb4bZ34FHBQlcHsjEcWw=\", false, function () {\n  return [useStore, useStore, useStore, useStore, useFakeTicketTransition];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Header","SwimLane","useStore","useFakeTicketTransition","DragDropContext","jsxDEV","_jsxDEV","App","_s","tickets","state","toggleLiveMode","liveMode","updateTicketStatus","ticketsByStatus","reduce","acc","ticket","status","push","onDragEnd","result","source","destination","draggableId","droppableId","className","children","ticketCounts","Object","fromEntries","entries","map","length","fileName","_jsxFileName","lineNumber","columnNumber","title","_c","$RefreshReg$"],"sources":["/home/yugdedhia/Coral-Finak/Kanban-Dashboard/src/App.js"],"sourcesContent":["import React from 'react';\nimport Header from './components/Header';\nimport SwimLane from './components/SwimLane';\nimport useStore from './store/useStore';\nimport useFakeTicketTransition from './hooks/useFakeTicketTransition';\nimport { DragDropContext } from 'react-beautiful-dnd';\n\nfunction App() {\n  const tickets = useStore((state) => state.tickets);\n  const toggleLiveMode = useStore((state) => state.toggleLiveMode);\n  const liveMode = useStore((state) => state.liveMode);\n  const updateTicketStatus = useStore((state) => state.updateTicketStatus);\n\n  useFakeTicketTransition();\n\n  const ticketsByStatus = tickets.reduce((acc, ticket) => {\n    acc[ticket.status] = acc[ticket.status] || [];\n    acc[ticket.status].push(ticket);\n    return acc;\n  }, {});\n\n  const onDragEnd = (result) => {\n    const { source, destination, draggableId } = result;\n\n    if (!destination) return;\n\n    // Check if the user dropped the ticket in a different swimlane\n    if (source.droppableId !== destination.droppableId) {\n      updateTicketStatus(draggableId, destination.droppableId);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Header\n        ticketCounts={Object.fromEntries(\n          Object.entries(ticketsByStatus).map(([status, tickets]) => [status, tickets.length])\n        )}\n        liveMode={liveMode}\n        toggleLiveMode={toggleLiveMode}\n      />\n      <DragDropContext onDragEnd={onDragEnd}>\n        <div className=\"kanban-board flex flex-row space-x-4 p-4 overflow-x-auto\">\n          {['To Do', 'In Progress', 'Blocked', 'Done'].map((status) => (\n            <SwimLane key={status} title={status} tickets={ticketsByStatus[status] || []} />\n          ))}\n        </div>\n      </DragDropContext>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}