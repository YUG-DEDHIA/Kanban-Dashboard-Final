{"ast":null,"code":"var _jsxFileName = \"/home/yugdedhia/Coral-Finak/Kanban-Dashboard/src/components/SwimLane.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TicketCard from './TicketCard';\nimport { Droppable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SwimLane = ({\n  title,\n  tickets\n}) => {\n  _s();\n  const [visibleTickets, setVisibleTickets] = useState([]);\n  useEffect(() => {\n    setVisibleTickets(tickets.slice(0, 20));\n  }, [tickets]);\n  const handleScroll = e => {\n    const bottom = e.target.scrollHeight - e.target.scrollTop <= e.target.clientHeight + 1;\n    if (bottom) {\n      setVisibleTickets(prev => [...prev, ...tickets.slice(prev.length, prev.length + 20)]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Droppable, {\n    droppableId: title,\n    children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"swimlane flex-1 min-w-[300px] bg-white border border-gray-300 p-4 rounded-md shadow-md max-h-screen overflow-y-auto\",\n      onScroll: handleScroll,\n      ...provided.droppableProps,\n      ref: provided.innerRef,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-4 text-gray-700 border-b pb-2\",\n        children: [title, \" (\", tickets.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [visibleTickets.map((ticket, index) => /*#__PURE__*/_jsxDEV(TicketCard, {\n          ticket: ticket,\n          index: index\n        }, ticket.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this)), provided.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(SwimLane, \"gZerN4wxCkWDWfUpDmdpJTLSbNs=\");\n_c = SwimLane;\nexport default SwimLane;\nvar _c;\n$RefreshReg$(_c, \"SwimLane\");","map":{"version":3,"names":["React","useState","useEffect","TicketCard","Droppable","jsxDEV","_jsxDEV","SwimLane","title","tickets","_s","visibleTickets","setVisibleTickets","slice","handleScroll","e","bottom","target","scrollHeight","scrollTop","clientHeight","prev","length","droppableId","children","provided","className","onScroll","droppableProps","ref","innerRef","fileName","_jsxFileName","lineNumber","columnNumber","map","ticket","index","id","placeholder","_c","$RefreshReg$"],"sources":["/home/yugdedhia/Coral-Finak/Kanban-Dashboard/src/components/SwimLane.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TicketCard from './TicketCard';\nimport { Droppable } from 'react-beautiful-dnd';\n\nconst SwimLane = ({ title, tickets }) => {\n  const [visibleTickets, setVisibleTickets] = useState([]);\n\n  useEffect(() => {\n    setVisibleTickets(tickets.slice(0, 20));\n  }, [tickets]);\n\n  const handleScroll = (e) => {\n    const bottom = e.target.scrollHeight - e.target.scrollTop <= e.target.clientHeight + 1;\n    if (bottom) {\n      setVisibleTickets((prev) => [...prev, ...tickets.slice(prev.length, prev.length + 20)]);\n    }\n  };\n\n  return (\n    <Droppable droppableId={title}>\n      {(provided) => (\n        <div\n          className=\"swimlane flex-1 min-w-[300px] bg-white border border-gray-300 p-4 rounded-md shadow-md max-h-screen overflow-y-auto\"\n          onScroll={handleScroll}\n          {...provided.droppableProps}\n          ref={provided.innerRef}\n        >\n          <h2 className=\"text-xl font-semibold mb-4 text-gray-700 border-b pb-2\">\n            {title} ({tickets.length})\n          </h2>\n          <div className=\"space-y-4\">\n            {visibleTickets.map((ticket, index) => (\n              <TicketCard key={ticket.id} ticket={ticket} index={index} />\n            ))}\n            {provided.placeholder}\n          </div>\n        </div>\n      )}\n    </Droppable>\n  );\n};\n\nexport default SwimLane;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,SAAS,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExDC,SAAS,CAAC,MAAM;IACdU,iBAAiB,CAACH,OAAO,CAACI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;EACzC,CAAC,EAAE,CAACJ,OAAO,CAAC,CAAC;EAEb,MAAMK,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAMC,MAAM,GAAGD,CAAC,CAACE,MAAM,CAACC,YAAY,GAAGH,CAAC,CAACE,MAAM,CAACE,SAAS,IAAIJ,CAAC,CAACE,MAAM,CAACG,YAAY,GAAG,CAAC;IACtF,IAAIJ,MAAM,EAAE;MACVJ,iBAAiB,CAAES,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE,GAAGZ,OAAO,CAACI,KAAK,CAACQ,IAAI,CAACC,MAAM,EAAED,IAAI,CAACC,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC;IACzF;EACF,CAAC;EAED,oBACEhB,OAAA,CAACF,SAAS;IAACmB,WAAW,EAAEf,KAAM;IAAAgB,QAAA,EAC1BC,QAAQ,iBACRnB,OAAA;MACEoB,SAAS,EAAC,qHAAqH;MAC/HC,QAAQ,EAAEb,YAAa;MAAA,GACnBW,QAAQ,CAACG,cAAc;MAC3BC,GAAG,EAAEJ,QAAQ,CAACK,QAAS;MAAAN,QAAA,gBAEvBlB,OAAA;QAAIoB,SAAS,EAAC,wDAAwD;QAAAF,QAAA,GACnEhB,KAAK,EAAC,IAAE,EAACC,OAAO,CAACa,MAAM,EAAC,GAC3B;MAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACL5B,OAAA;QAAKoB,SAAS,EAAC,WAAW;QAAAF,QAAA,GACvBb,cAAc,CAACwB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAChC/B,OAAA,CAACH,UAAU;UAAiBiC,MAAM,EAAEA,MAAO;UAACC,KAAK,EAAEA;QAAM,GAAxCD,MAAM,CAACE,EAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAiC,CAC5D,CAAC,EACDT,QAAQ,CAACc,WAAW;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAEhB,CAAC;AAACxB,EAAA,CApCIH,QAAQ;AAAAiC,EAAA,GAARjC,QAAQ;AAsCd,eAAeA,QAAQ;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}