{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport useStore from '../store/useStore';\nconst useFakeTicketTransition = () => {\n  _s();\n  const liveMode = useStore(state => state.liveMode);\n  const updateTicketStatus = useStore(state => state.updateTicketStatus);\n  useEffect(() => {\n    if (!liveMode) return;\n    const interval = setInterval(() => {\n      updateTicketStatus(/* Logic to randomly choose a ticket and transition it */);\n    }, 2000);\n    return () => clearInterval(interval);\n  }, [liveMode, updateTicketStatus]);\n};\n_s(useFakeTicketTransition, \"4Kzo2/qdxWKO+nANHQQ1K0HL0ho=\", false, function () {\n  return [useStore, useStore];\n});\nexport default useFakeTicketTransition;","map":{"version":3,"names":["useEffect","useStore","useFakeTicketTransition","_s","liveMode","state","updateTicketStatus","interval","setInterval","clearInterval"],"sources":["/home/yugdedhia/Coral/parshva/kanban-dashboard/src/hooks/useFakeTicketTransition.js"],"sourcesContent":["import { useEffect } from 'react';\nimport useStore from '../store/useStore';\n\nconst useFakeTicketTransition = () => {\n  const liveMode = useStore((state) => state.liveMode);\n  const updateTicketStatus = useStore((state) => state.updateTicketStatus);\n\n  useEffect(() => {\n    if (!liveMode) return;\n\n    const interval = setInterval(() => {\n      updateTicketStatus(/* Logic to randomly choose a ticket and transition it */);\n    }, 2000);\n\n    return () => clearInterval(interval);\n  }, [liveMode, updateTicketStatus]);\n};\n\nexport default useFakeTicketTransition;"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,QAAQ,MAAM,mBAAmB;AAExC,MAAMC,uBAAuB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,MAAMC,QAAQ,GAAGH,QAAQ,CAAEI,KAAK,IAAKA,KAAK,CAACD,QAAQ,CAAC;EACpD,MAAME,kBAAkB,GAAGL,QAAQ,CAAEI,KAAK,IAAKA,KAAK,CAACC,kBAAkB,CAAC;EAExEN,SAAS,CAAC,MAAM;IACd,IAAI,CAACI,QAAQ,EAAE;IAEf,MAAMG,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCF,kBAAkB,CAAC,0DAA0D;IAC/E,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMG,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACH,QAAQ,EAAEE,kBAAkB,CAAC,CAAC;AACpC,CAAC;AAACH,EAAA,CAbID,uBAAuB;EAAA,QACVD,QAAQ,EACEA,QAAQ;AAAA;AAarC,eAAeC,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}