{"ast":null,"code":"var _jsxFileName = \"/home/yugdedhia/Coral/parshva/kanban-dashboard/src/components/TicketCard.js\";\nimport React from 'react';\nconst TicketCard = ({\n  ticket\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ticket-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"ticket-id\",\n      children: [\"#\", ticket.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: ticket.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: ticket.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c = TicketCard;\nexport default TicketCard;\n\n// Step 3: Generate Tickets Using Faker\n// src/data/generateTickets.js\nimport { faker } from '@faker-js/faker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const generateTickets = (count = 10000) => {\n  return Array.from({\n    length: count\n  }, (_, index) => ({\n    id: faker.datatype.uuid(),\n    title: faker.lorem.sentence(),\n    description: faker.lorem.paragraph(),\n    status: faker.helpers.arrayElement(['To Do', 'In Progress', 'Blocked', 'Done'])\n  }));\n};\nvar _c;\n$RefreshReg$(_c, \"TicketCard\");","map":{"version":3,"names":["React","TicketCard","ticket","_jsxDEV","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","title","description","_c","faker","jsxDEV","generateTickets","count","Array","from","length","_","index","datatype","uuid","lorem","sentence","paragraph","status","helpers","arrayElement","$RefreshReg$"],"sources":["/home/yugdedhia/Coral/parshva/kanban-dashboard/src/components/TicketCard.js"],"sourcesContent":["import React from 'react';\n\nconst TicketCard = ({ ticket }) => {\n  return (\n    <div className=\"ticket-card\">\n      <span className=\"ticket-id\">#{ticket.id}</span>\n      <h3>{ticket.title}</h3>\n      <p>{ticket.description}</p>\n    </div>\n  );\n};\n\nexport default TicketCard;\n\n// Step 3: Generate Tickets Using Faker\n// src/data/generateTickets.js\nimport { faker } from '@faker-js/faker';\n\nexport const generateTickets = (count = 10000) => {\n  return Array.from({ length: count }, (_, index) => ({\n    id: faker.datatype.uuid(),\n    title: faker.lorem.sentence(),\n    description: faker.lorem.paragraph(),\n    status: faker.helpers.arrayElement(['To Do', 'In Progress', 'Blocked', 'Done']),\n  }));\n};"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EACjC,oBACEC,OAAA;IAAKC,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BF,OAAA;MAAMC,SAAS,EAAC,WAAW;MAAAC,QAAA,GAAC,GAAC,EAACH,MAAM,CAACI,EAAE;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC/CP,OAAA;MAAAE,QAAA,EAAKH,MAAM,CAACS;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvBP,OAAA;MAAAE,QAAA,EAAIH,MAAM,CAACU;IAAW;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEV,CAAC;AAACG,EAAA,GARIZ,UAAU;AAUhB,eAAeA,UAAU;;AAEzB;AACA;AACA,SAASa,KAAK,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAZ,OAAA;AAExC,OAAO,MAAMa,eAAe,GAAGA,CAACC,KAAK,GAAG,KAAK,KAAK;EAChD,OAAOC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAEH;EAAM,CAAC,EAAE,CAACI,CAAC,EAAEC,KAAK,MAAM;IAClDhB,EAAE,EAAEQ,KAAK,CAACS,QAAQ,CAACC,IAAI,CAAC,CAAC;IACzBb,KAAK,EAAEG,KAAK,CAACW,KAAK,CAACC,QAAQ,CAAC,CAAC;IAC7Bd,WAAW,EAAEE,KAAK,CAACW,KAAK,CAACE,SAAS,CAAC,CAAC;IACpCC,MAAM,EAAEd,KAAK,CAACe,OAAO,CAACC,YAAY,CAAC,CAAC,OAAO,EAAE,aAAa,EAAE,SAAS,EAAE,MAAM,CAAC;EAChF,CAAC,CAAC,CAAC;AACL,CAAC;AAAC,IAAAjB,EAAA;AAAAkB,YAAA,CAAAlB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}